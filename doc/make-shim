#!/bin/sh -Cue
#.help
# % [CMD..]
#
# Output jobserver shim for later customization.
#
# Example:
#   This will start tmux under jobserver by default, allowing all sessions and panes to share background slots.  (Panes also "create" their own job slot.)  Note this example is already customized!
#
#   # if $PATH includes ~/.local/bin
#   $ tmux="$(which tmux)" && cat <<END >~/.local/bin/tmux
#   #!/bin/sh -Cue
#   if [ \$# = 0 ]; then
#       exec jobserver init $tmux new -A
#   fi
#   exec $tmux "\$@"
#   END
##
##Options:
##-xV --xyx=VALUE               option xyz uses VALUE

fatal() { rc="$1"; shift; printf %s\\n "${0##*/} error: $*" >&2; exit "$rc"; }

handle_option() { fatal 64 "unknown option $1"; }
while [ $# -gt 0 ]; do
    case "$1" in
        --) shift; break ;;
        --*=*) x="${1#--}"; handle_option "${x%%=*}" "${x#*=}"; shift ;;
        --*) handle_option "${1#--}"; shift ;;
        -?) handle_option "${1#-}"; shift ;;
        -?*)
            v="${1#??}"
            x="${1%"$v"}"
            handle_option "${x#-}" "$v"
            shift
            ;;
        *) break ;;
        esac
    done
case "${1-}" in
    -*) set -- -- "$@" ;;
    esac
[ $# != 0 ] || set -- TO''DO

squote() {
    local x
    while true; do
        x="$(printf %s "$1" | tr -d -c \\055_0-9A-Za-z)"
        if [ -n "$1" -a x"$x" = x"$1" ]; then
            printf %s "$1"
        else
            printf \'%s\' "$(printf %s "$1" | sed -r s/\'/\'\\\\\'\'/g)"
            fi
        shift
        case $# in
            0) break ;;
            *) printf ' ' ;;
            esac
        done
    }

cat <<END
#!/bin/sh -Cue
exec jobserver init $(squote "$@") "\$@"
END
